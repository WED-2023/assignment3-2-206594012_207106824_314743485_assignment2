openapi: 3.0.0
info:
  title: Recipes Web
  description: |
    "Recipes Web" is a web platform where users can search, create, and manage personal and family recipes.
    This API supports all dynamic functionality of the SPA, including recipe browsing, user authentication, favorite management, and meal planning.
    The About page is a static frontend component that includes a short marketing summary about the team and links to previous exercises. Static content like the About page and logout are handled by the frontend only.
  contact:
    email: leech@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/bgu-78b/Recipes/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://virtserver.swaggerhub.com/leechemo152/Recipes/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: Auth
  description: All authentication related routes
- name: Users
  description: All the user's personal app info
- name: Recipes
  description: All reciepes general info
paths:
  /auth/Register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        "201":
          description: User created successfully
        "409":
          description: Username already exists

  /auth/Login:
    post:
      tags:
        - Auth
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        "200":
          description: Login successful
        "401":
          description: Invalid username or password

  /auth/Logout:
    post:
      tags:
        - Auth
      summary: User logout
      responses:
        "200":
          description: Logout successful

  /recipes/random:
    get:
      tags:
        - Recipes
      summary: Get 3 random recipes
      responses:
        "200":
          description: Random recipes returned

  /recipes/search:
    get:
      tags:
        - Recipes
      summary: Search for recipes
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
        - name: cuisine
          in: query
          required: false
          schema:
            type: string
        - name: diet
          in: query
          required: false
          schema:
            type: string
        - name: intolerances
          in: query
          required: false
          schema:
            type: string
        - name: number
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Search results

  /recipes/{recipeId}:
    get:
      tags:
        - Recipes
      summary: Get recipe preview
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Recipe preview

  /recipes/fullview/{recipeId}:
    get:
      tags:
        - Recipes
      summary: Get full recipe view
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Full recipe details

  /recipes/{recipeId}/prepare:
    get:
      tags:
        - Recipes
      summary: Get preparation instructions and progress from Spoonacular
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Preparation data returned

  /users/favorites:
    get:
      tags:
        - Users
      summary: Get user favorite recipes
      responses:
        "200":
          description: Favorite recipes

  /users/favorites:
    post:
      tags:
        - Users
      summary: Add recipe to favorites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipeId:
                  type: string
      responses:
        "200":
          description: Recipe marked as favorite

  /users/my-recipes:
    get:
      tags:
        - Users
      summary: Get personal recipes
      responses:
        "200":
          description: Personal recipe previews

  /users/my-recipes:
    post:
      tags:
        - Users
      summary: Create personal or family recipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeCreation'
      responses:
        "201":
          description: Recipe created

  /users/my-recipes/{recipeId}:
    get:
      tags:
        - Users
      summary: Get full personal recipe details
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Full recipe data

  /users/family-recipes:
    get:
      tags:
        - Users
      summary: Get family recipe previews
      responses:
        "200":
          description: Family recipes

  /users/family-recipes/{recipeId}:
    get:
      tags:
        - Users
      summary: Get full family recipe details
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Family recipe data

  /users/recipes/watched:
    get:
      tags:
        - Users
      summary: Get last 3 watched recipes
      responses:
        "200":
          description: Last watched recipes

  /users/recipes/{recipeId}/prepare/step:
    post:
      tags:
        - Users
      summary: Mark a step as completed
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                stepIndex:
                  type: integer
      responses:
        "200":
          description: Step marked

  /users/my-recipes/{recipeId}/prepare:
    get:
      tags:
        - Users
      summary: Prepare personal recipe
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Preparation steps and progress

  /users/family-recipes/{recipeId}/prepare:
    get:
      tags:
        - Users
      summary: Prepare family recipe
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Preparation steps and progress

  /users/meal-plan:
    get:
      tags:
        - Users
      summary: Get meal plan
      responses:
        "200":
          description: Current meal plan

  /users/meal-plan:
    post:
      tags:
        - Users
      summary: Add to meal plan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recipeID:
                  type: string
      responses:
        "200":
          description: Added

  /users/meal-plan/{recipeID}:
    patch:
      tags:
        - Users
      summary: Change meal plan order
      parameters:
        - in: path
          name: recipeID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderIndex:
                  type: integer
      responses:
        "200":
          description: Order updated

  /users/meal-plan/{recipeID}:
    delete:
      tags:
        - Users
      summary: Remove from meal plan
      parameters:
        - in: path
          name: recipeID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Removed

  /users/meal-plan:
    delete:
      tags:
        - Users
      summary: Clear meal plan
      responses:
        "200":
          description: Cleared
components:
  schemas:
    RegisterRequest:
      required:
      - country
      - email
      - firstName
      - lastName
      - password
      - passwordConfirm
      - username
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          pattern: "^[a-zA-Z]+$"
          type: string
          example: leech
        password:
          maxLength: 10
          minLength: 5
          pattern: "^(?=.*[0-9])(?=.*[!@#$%^&*])[A-Za-z0-9!@#$%^&*]{5,10}$"
          type: string
          example: ILoveYou5!
        passwordConfirm:
          type: string
          example: ILoveYou5!
        firstName:
          type: string
          example: Lee
        lastName:
          type: string
          example: Chemo
        country:
          type: string
          example: Israel
        email:
          type: string
          format: email
          example: leechemo152@gmail.com
    LoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          example: leech
        password:
          type: string
          example: ILoveYou5!
    RecipePreview:
      type: object
      properties:
        id:
          type: string
          example: r1
        title:
          type: string
          example: Lee's apple-pie
        image:
          type: string
          format: uri
          example: https://example.com/apple-pie.jpg
        preparationTime:
          type: integer
          example: 30
        likes:
          type: integer
          example: 105
        isVegan:
          type: boolean
          example: false
        isVegetarian:
          type: boolean
          example: true
        isGlutenFree:
          type: boolean
          example: true
        hasViewed:
          type: boolean
          example: true
        isFavorite:
          type: boolean
          example: true
    Recipe:
      required:
      - ingredients
      - instructions
      - servings
      type: object
      properties:
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Recipe_ingredients'
        instructions:
          type: array
          example:
          - Peel and slice apples
          - Mix with cinnamon
          - Bake at 180°C for 40 minutes
          items:
            type: string
        servings:
          type: integer
          example: 4
      allOf:
      - $ref: '#/components/schemas/RecipePreview'
    RecipeSearchResult:
      allOf:
      - $ref: '#/components/schemas/RecipePreview'
      - type: object
        properties:
          instructions:
            type: array
            example:
            - Mix all ingredients
            - Bake for 30 minutes
            items:
              type: string
    FamilyRecipe:
      type: object
      properties:
        title:
          type: string
          example: Soup with chicken and vegetables
        owner:
          type: string
          example: Grandma Eti
        traditionNote:
          type: string
          example: "Passed down from my grandmother, served every friday dinner"
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/FamilyRecipe_ingredients'
        instructions:
          type: array
          example:
          - Cut the zucchini into cubes
          - add to the soup
          items:
            type: string
        image:
          type: string
          format: uri
          example: https://example.com/images/Soup.jpg
    CookingInstructions:
      type: object
      properties:
        servings:
          type: integer
          example: 4
        servingsMultiplier:
          type: number
          description: Multiplier applied to ingredients for portion scaling
          example: 2
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/CookingInstructions_ingredients'
        progressSaved:
          type: boolean
          description: Whether the user's progress is currently saved
          example: true
        steps:
          type: array
          items:
            $ref: '#/components/schemas/CookingInstructions_steps'
    MealPlan:
      type: object
      properties:
        recipes:
          type: array
          items:
            $ref: '#/components/schemas/MealPlanItem'
    MealPlanItem:
      required:
      - order
      - recipeId
      type: object
      properties:
        recipeId:
          type: string
          example: r1
        order:
          type: integer
          example: 2
        progress:
          type: integer
          example: 40
    mealplan_recipeId_body:
      type: object
      properties:
        order:
          type: integer
          example: 1
    Recipe_ingredients:
      type: object
      properties:
        name:
          type: string
          example: Apples
        quantity:
          type: string
          example: 2 cups
    FamilyRecipe_ingredients:
      type: object
      properties:
        name:
          type: string
          example: Zucchini
        quantity:
          type: string
          example: 1 unit
    CookingInstructions_ingredients:
      type: object
      properties:
        name:
          type: string
          example: Flour
        quantity:
          type: string
          example: 2 cups
    CookingInstructions_steps:
      type: object
      properties:
        stepNumber:
          type: integer
          example: 1
        description:
          type: string
          example: Chop the onions
        completed:
          type: boolean
          example: false
